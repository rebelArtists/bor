name: Deploy Devnet
on: [ push, pull_request ]

jobs:
  deploy_devnet:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize runner build space for k8s images
      uses: AdityaGarg8/remove-unwanted-software@v2
      with:
        remove-android: 'true'
        remove-dotnet: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
    - name: Checkout curent repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.before }}
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17
    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
        && sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
        && kubectl version --client
    - name: Install kind
      run: go install sigs.k8s.io/kind@v0.20.0
    - name: Install tomlq
      run: |
        pip3 install tomlq
    - name: Free github runner disk space for k8s image building
      run: |
        rm -rf /usr/share/dotnet/
        rm -rf /opt/hostedtoolcache
    - uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
    - name: Install tomlq
      run: |
        gcloud container clusters list
    # - name: Create local k8s cluster
    #   run: |
    #     kind create cluster --name regression-tester --config .github/workflows/kind-config.yaml.sample
    #     kubectl cluster-info --context kind-regression-tester
    # - name: Clone and then build devnet images
    #   run: |
    #     eval `ssh-agent -s`
    #     ssh-add - <<< '${{ secrets.SSH_PRIVATE_KEY }}'
    #     git clone git@github.com:maticnetwork/polygon-devnets.git
    #     cd polygon-devnets/docker/pos
    #     make all DEV=true K8S_ENV=true K8S_NS=test
    # - name: Load images into cluster
    #   run: kind load docker-image ganache:latest heimdall:latest bor:latest workload:latest status:latest --name regression-tester
    # - name: Deploy devnet
    #   run: |
    #     cd polygon-devnets/docker/pos/k8s
    #     kubectl apply -k . --context kind-regression-tester
    # - name: Check deployed resources
    #   run: |
    #     current_minute=$(date +'%M')
    #     end_minute=$((current_minute + 60)) # Run for the next hour as test
    # 
    #     while [ $current_minute -lt $end_minute ]; do
    #       kubectl get pods -n test
    #       sleep 600 # Sleep for 10 minutes
    #       current_minute=$(date +'%M')
    #     done
